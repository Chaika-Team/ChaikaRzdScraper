// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v4.25.6
// source: rzd_service.proto

package rzd

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTrainRoutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code0         string                 `protobuf:"bytes,1,opt,name=code0,proto3" json:"code0,omitempty"`
	Code1         string                 `protobuf:"bytes,2,opt,name=code1,proto3" json:"code1,omitempty"`
	Dir           int32                  `protobuf:"varint,3,opt,name=dir,proto3" json:"dir,omitempty"`               // 0 - только в одну сторону, 1 - туда-обратно
	Tfl           int32                  `protobuf:"varint,4,opt,name=tfl,proto3" json:"tfl,omitempty"`               // Тип поезда (3 - поезда и электрички, 2 - электрички, 1 - поезда)
	CheckSeats    int32                  `protobuf:"varint,5,opt,name=checkSeats,proto3" json:"checkSeats,omitempty"` // 1 - только с билетами, 0 - все поезда
	Dt0           string                 `protobuf:"bytes,6,opt,name=dt0,proto3" json:"dt0,omitempty"`                // Дата отправления (d.m.Y)
	Md            int32                  `protobuf:"varint,7,opt,name=md,proto3" json:"md,omitempty"`                 // Маршруты с пересадками (1 - с пересадками, 0 - только прямые рейсы)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainRoutesRequest) Reset() {
	*x = GetTrainRoutesRequest{}
	mi := &file_rzd_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainRoutesRequest) ProtoMessage() {}

func (x *GetTrainRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainRoutesRequest.ProtoReflect.Descriptor instead.
func (*GetTrainRoutesRequest) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTrainRoutesRequest) GetCode0() string {
	if x != nil {
		return x.Code0
	}
	return ""
}

func (x *GetTrainRoutesRequest) GetCode1() string {
	if x != nil {
		return x.Code1
	}
	return ""
}

func (x *GetTrainRoutesRequest) GetDir() int32 {
	if x != nil {
		return x.Dir
	}
	return 0
}

func (x *GetTrainRoutesRequest) GetTfl() int32 {
	if x != nil {
		return x.Tfl
	}
	return 0
}

func (x *GetTrainRoutesRequest) GetCheckSeats() int32 {
	if x != nil {
		return x.CheckSeats
	}
	return 0
}

func (x *GetTrainRoutesRequest) GetDt0() string {
	if x != nil {
		return x.Dt0
	}
	return ""
}

func (x *GetTrainRoutesRequest) GetMd() int32 {
	if x != nil {
		return x.Md
	}
	return 0
}

type Car struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CarType       string                 `protobuf:"bytes,1,opt,name=carType,proto3" json:"carType,omitempty"`      // Тип вагона
	CarNumber     string                 `protobuf:"bytes,2,opt,name=carNumber,proto3" json:"carNumber,omitempty"`  // Номер вагона
	FreeSeats     int32                  `protobuf:"varint,3,opt,name=freeSeats,proto3" json:"freeSeats,omitempty"` // Количество свободных мест
	Tariff        float32                `protobuf:"fixed32,4,opt,name=tariff,proto3" json:"tariff,omitempty"`      // Тариф
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Car) Reset() {
	*x = Car{}
	mi := &file_rzd_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Car) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Car) ProtoMessage() {}

func (x *Car) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Car.ProtoReflect.Descriptor instead.
func (*Car) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{1}
}

func (x *Car) GetCarType() string {
	if x != nil {
		return x.CarType
	}
	return ""
}

func (x *Car) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

func (x *Car) GetFreeSeats() int32 {
	if x != nil {
		return x.FreeSeats
	}
	return 0
}

func (x *Car) GetTariff() float32 {
	if x != nil {
		return x.Tariff
	}
	return 0
}

type TrainRoute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Route0        string                 `protobuf:"bytes,1,opt,name=route0,proto3" json:"route0,omitempty"`
	Route1        string                 `protobuf:"bytes,2,opt,name=route1,proto3" json:"route1,omitempty"`
	Date0         string                 `protobuf:"bytes,3,opt,name=date0,proto3" json:"date0,omitempty"`
	Time0         string                 `protobuf:"bytes,4,opt,name=time0,proto3" json:"time0,omitempty"`
	Number        string                 `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	From          string                 `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	Where         string                 `protobuf:"bytes,7,opt,name=where,proto3" json:"where,omitempty"`
	Date          string                 `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	FromCode      string                 `protobuf:"bytes,9,opt,name=fromCode,proto3" json:"fromCode,omitempty"`
	WhereCode     string                 `protobuf:"bytes,10,opt,name=whereCode,proto3" json:"whereCode,omitempty"`
	Time1         string                 `protobuf:"bytes,11,opt,name=time1,proto3" json:"time1,omitempty"`
	TimeInWay     string                 `protobuf:"bytes,12,opt,name=timeInWay,proto3" json:"timeInWay,omitempty"`
	Brand         string                 `protobuf:"bytes,13,opt,name=brand,proto3" json:"brand,omitempty"`
	Carrier       string                 `protobuf:"bytes,14,opt,name=carrier,proto3" json:"carrier,omitempty"`
	Cars          []*Car                 `protobuf:"bytes,15,rep,name=cars,proto3" json:"cars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainRoute) Reset() {
	*x = TrainRoute{}
	mi := &file_rzd_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainRoute) ProtoMessage() {}

func (x *TrainRoute) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainRoute.ProtoReflect.Descriptor instead.
func (*TrainRoute) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{2}
}

func (x *TrainRoute) GetRoute0() string {
	if x != nil {
		return x.Route0
	}
	return ""
}

func (x *TrainRoute) GetRoute1() string {
	if x != nil {
		return x.Route1
	}
	return ""
}

func (x *TrainRoute) GetDate0() string {
	if x != nil {
		return x.Date0
	}
	return ""
}

func (x *TrainRoute) GetTime0() string {
	if x != nil {
		return x.Time0
	}
	return ""
}

func (x *TrainRoute) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *TrainRoute) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TrainRoute) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

func (x *TrainRoute) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TrainRoute) GetFromCode() string {
	if x != nil {
		return x.FromCode
	}
	return ""
}

func (x *TrainRoute) GetWhereCode() string {
	if x != nil {
		return x.WhereCode
	}
	return ""
}

func (x *TrainRoute) GetTime1() string {
	if x != nil {
		return x.Time1
	}
	return ""
}

func (x *TrainRoute) GetTimeInWay() string {
	if x != nil {
		return x.TimeInWay
	}
	return ""
}

func (x *TrainRoute) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *TrainRoute) GetCarrier() string {
	if x != nil {
		return x.Carrier
	}
	return ""
}

func (x *TrainRoute) GetCars() []*Car {
	if x != nil {
		return x.Cars
	}
	return nil
}

type GetTrainRoutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*TrainRoute          `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainRoutesResponse) Reset() {
	*x = GetTrainRoutesResponse{}
	mi := &file_rzd_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainRoutesResponse) ProtoMessage() {}

func (x *GetTrainRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainRoutesResponse.ProtoReflect.Descriptor instead.
func (*GetTrainRoutesResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTrainRoutesResponse) GetRoutes() []*TrainRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetTrainRoutesReturnRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code0         string                 `protobuf:"bytes,1,opt,name=code0,proto3" json:"code0,omitempty"`
	Code1         string                 `protobuf:"bytes,2,opt,name=code1,proto3" json:"code1,omitempty"`
	Dir           int32                  `protobuf:"varint,3,opt,name=dir,proto3" json:"dir,omitempty"`               // 0 - только в одну сторону, 1 - туда-обратно
	Tfl           int32                  `protobuf:"varint,4,opt,name=tfl,proto3" json:"tfl,omitempty"`               // Тип поезда
	CheckSeats    int32                  `protobuf:"varint,5,opt,name=checkSeats,proto3" json:"checkSeats,omitempty"` // Проверка наличия свободных мест
	Dt0           string                 `protobuf:"bytes,6,opt,name=dt0,proto3" json:"dt0,omitempty"`                // Дата отправления
	Dt1           string                 `protobuf:"bytes,7,opt,name=dt1,proto3" json:"dt1,omitempty"`                // Дата возврата
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainRoutesReturnRequest) Reset() {
	*x = GetTrainRoutesReturnRequest{}
	mi := &file_rzd_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainRoutesReturnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainRoutesReturnRequest) ProtoMessage() {}

func (x *GetTrainRoutesReturnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainRoutesReturnRequest.ProtoReflect.Descriptor instead.
func (*GetTrainRoutesReturnRequest) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetTrainRoutesReturnRequest) GetCode0() string {
	if x != nil {
		return x.Code0
	}
	return ""
}

func (x *GetTrainRoutesReturnRequest) GetCode1() string {
	if x != nil {
		return x.Code1
	}
	return ""
}

func (x *GetTrainRoutesReturnRequest) GetDir() int32 {
	if x != nil {
		return x.Dir
	}
	return 0
}

func (x *GetTrainRoutesReturnRequest) GetTfl() int32 {
	if x != nil {
		return x.Tfl
	}
	return 0
}

func (x *GetTrainRoutesReturnRequest) GetCheckSeats() int32 {
	if x != nil {
		return x.CheckSeats
	}
	return 0
}

func (x *GetTrainRoutesReturnRequest) GetDt0() string {
	if x != nil {
		return x.Dt0
	}
	return ""
}

func (x *GetTrainRoutesReturnRequest) GetDt1() string {
	if x != nil {
		return x.Dt1
	}
	return ""
}

type GetTrainRoutesReturnResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Forward       []*TrainRoute          `protobuf:"bytes,1,rep,name=forward,proto3" json:"forward,omitempty"`
	Back          []*TrainRoute          `protobuf:"bytes,2,rep,name=back,proto3" json:"back,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainRoutesReturnResponse) Reset() {
	*x = GetTrainRoutesReturnResponse{}
	mi := &file_rzd_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainRoutesReturnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainRoutesReturnResponse) ProtoMessage() {}

func (x *GetTrainRoutesReturnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainRoutesReturnResponse.ProtoReflect.Descriptor instead.
func (*GetTrainRoutesReturnResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetTrainRoutesReturnResponse) GetForward() []*TrainRoute {
	if x != nil {
		return x.Forward
	}
	return nil
}

func (x *GetTrainRoutesReturnResponse) GetBack() []*TrainRoute {
	if x != nil {
		return x.Back
	}
	return nil
}

type GetTrainCarriagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code0         string                 `protobuf:"bytes,1,opt,name=code0,proto3" json:"code0,omitempty"`
	Code1         string                 `protobuf:"bytes,2,opt,name=code1,proto3" json:"code1,omitempty"`
	Tnum0         string                 `protobuf:"bytes,3,opt,name=tnum0,proto3" json:"tnum0,omitempty"` // Номер поезда
	Time0         string                 `protobuf:"bytes,4,opt,name=time0,proto3" json:"time0,omitempty"` // Время отправления
	Dt0           string                 `protobuf:"bytes,5,opt,name=dt0,proto3" json:"dt0,omitempty"`     // Дата отправления
	Dir           int32                  `protobuf:"varint,6,opt,name=dir,proto3" json:"dir,omitempty"`    // Направление
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainCarriagesRequest) Reset() {
	*x = GetTrainCarriagesRequest{}
	mi := &file_rzd_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainCarriagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainCarriagesRequest) ProtoMessage() {}

func (x *GetTrainCarriagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainCarriagesRequest.ProtoReflect.Descriptor instead.
func (*GetTrainCarriagesRequest) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetTrainCarriagesRequest) GetCode0() string {
	if x != nil {
		return x.Code0
	}
	return ""
}

func (x *GetTrainCarriagesRequest) GetCode1() string {
	if x != nil {
		return x.Code1
	}
	return ""
}

func (x *GetTrainCarriagesRequest) GetTnum0() string {
	if x != nil {
		return x.Tnum0
	}
	return ""
}

func (x *GetTrainCarriagesRequest) GetTime0() string {
	if x != nil {
		return x.Time0
	}
	return ""
}

func (x *GetTrainCarriagesRequest) GetDt0() string {
	if x != nil {
		return x.Dt0
	}
	return ""
}

func (x *GetTrainCarriagesRequest) GetDir() int32 {
	if x != nil {
		return x.Dir
	}
	return 0
}

type Seat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Places        []string               `protobuf:"bytes,1,rep,name=places,proto3" json:"places,omitempty"`
	Tariff        float32                `protobuf:"fixed32,2,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Free          int32                  `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Label         string                 `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Seat) Reset() {
	*x = Seat{}
	mi := &file_rzd_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{7}
}

func (x *Seat) GetPlaces() []string {
	if x != nil {
		return x.Places
	}
	return nil
}

func (x *Seat) GetTariff() float32 {
	if x != nil {
		return x.Tariff
	}
	return 0
}

func (x *Seat) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Seat) GetFree() int32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *Seat) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Carriage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cnumber       string                 `protobuf:"bytes,1,opt,name=cnumber,proto3" json:"cnumber,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	TypeLoc       string                 `protobuf:"bytes,3,opt,name=typeLoc,proto3" json:"typeLoc,omitempty"`
	ClsType       string                 `protobuf:"bytes,4,opt,name=clsType,proto3" json:"clsType,omitempty"`
	Tariff        float32                `protobuf:"fixed32,5,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Seats         []*Seat                `protobuf:"bytes,6,rep,name=seats,proto3" json:"seats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Carriage) Reset() {
	*x = Carriage{}
	mi := &file_rzd_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Carriage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Carriage) ProtoMessage() {}

func (x *Carriage) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Carriage.ProtoReflect.Descriptor instead.
func (*Carriage) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{8}
}

func (x *Carriage) GetCnumber() string {
	if x != nil {
		return x.Cnumber
	}
	return ""
}

func (x *Carriage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Carriage) GetTypeLoc() string {
	if x != nil {
		return x.TypeLoc
	}
	return ""
}

func (x *Carriage) GetClsType() string {
	if x != nil {
		return x.ClsType
	}
	return ""
}

func (x *Carriage) GetTariff() float32 {
	if x != nil {
		return x.Tariff
	}
	return 0
}

func (x *Carriage) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

type TrainCarriagesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Cars           []*Carriage            `protobuf:"bytes,1,rep,name=cars,proto3" json:"cars,omitempty"`
	FunctionBlocks []string               `protobuf:"bytes,2,rep,name=functionBlocks,proto3" json:"functionBlocks,omitempty"`
	Schemes        []string               `protobuf:"bytes,3,rep,name=schemes,proto3" json:"schemes,omitempty"`
	Companies      []string               `protobuf:"bytes,4,rep,name=companies,proto3" json:"companies,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TrainCarriagesResponse) Reset() {
	*x = TrainCarriagesResponse{}
	mi := &file_rzd_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainCarriagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainCarriagesResponse) ProtoMessage() {}

func (x *TrainCarriagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainCarriagesResponse.ProtoReflect.Descriptor instead.
func (*TrainCarriagesResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{9}
}

func (x *TrainCarriagesResponse) GetCars() []*Carriage {
	if x != nil {
		return x.Cars
	}
	return nil
}

func (x *TrainCarriagesResponse) GetFunctionBlocks() []string {
	if x != nil {
		return x.FunctionBlocks
	}
	return nil
}

func (x *TrainCarriagesResponse) GetSchemes() []string {
	if x != nil {
		return x.Schemes
	}
	return nil
}

func (x *TrainCarriagesResponse) GetCompanies() []string {
	if x != nil {
		return x.Companies
	}
	return nil
}

type GetTrainCarriagesResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Response      *TrainCarriagesResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainCarriagesResponse) Reset() {
	*x = GetTrainCarriagesResponse{}
	mi := &file_rzd_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainCarriagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainCarriagesResponse) ProtoMessage() {}

func (x *GetTrainCarriagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainCarriagesResponse.ProtoReflect.Descriptor instead.
func (*GetTrainCarriagesResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetTrainCarriagesResponse) GetResponse() *TrainCarriagesResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetTrainStationListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrainNumber   string                 `protobuf:"bytes,1,opt,name=trainNumber,proto3" json:"trainNumber,omitempty"`
	DepDate       string                 `protobuf:"bytes,2,opt,name=depDate,proto3" json:"depDate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainStationListRequest) Reset() {
	*x = GetTrainStationListRequest{}
	mi := &file_rzd_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainStationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainStationListRequest) ProtoMessage() {}

func (x *GetTrainStationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainStationListRequest.ProtoReflect.Descriptor instead.
func (*GetTrainStationListRequest) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTrainStationListRequest) GetTrainNumber() string {
	if x != nil {
		return x.TrainNumber
	}
	return ""
}

func (x *GetTrainStationListRequest) GetDepDate() string {
	if x != nil {
		return x.DepDate
	}
	return ""
}

type TrainInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        string                 `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"` // Добавьте другие поля по необходимости
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainInfo) Reset() {
	*x = TrainInfo{}
	mi := &file_rzd_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainInfo) ProtoMessage() {}

func (x *TrainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainInfo.ProtoReflect.Descriptor instead.
func (*TrainInfo) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{12}
}

func (x *TrainInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Station       string                 `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty"`
	ArrivalTime   string                 `protobuf:"bytes,2,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	DepartureTime string                 `protobuf:"bytes,3,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"` // Добавьте другие поля по необходимости
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_rzd_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{13}
}

func (x *Route) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *Route) GetArrivalTime() string {
	if x != nil {
		return x.ArrivalTime
	}
	return ""
}

func (x *Route) GetDepartureTime() string {
	if x != nil {
		return x.DepartureTime
	}
	return ""
}

type TrainStationListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Train         *TrainInfo             `protobuf:"bytes,1,opt,name=train,proto3" json:"train,omitempty"`
	Routes        []*Route               `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrainStationListResponse) Reset() {
	*x = TrainStationListResponse{}
	mi := &file_rzd_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrainStationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainStationListResponse) ProtoMessage() {}

func (x *TrainStationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainStationListResponse.ProtoReflect.Descriptor instead.
func (*TrainStationListResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{14}
}

func (x *TrainStationListResponse) GetTrain() *TrainInfo {
	if x != nil {
		return x.Train
	}
	return nil
}

func (x *TrainStationListResponse) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetTrainStationListResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Response      *TrainStationListResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrainStationListResponse) Reset() {
	*x = GetTrainStationListResponse{}
	mi := &file_rzd_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrainStationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainStationListResponse) ProtoMessage() {}

func (x *GetTrainStationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainStationListResponse.ProtoReflect.Descriptor instead.
func (*GetTrainStationListResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetTrainStationListResponse) GetResponse() *TrainStationListResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type StationCode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Station       string                 `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StationCode) Reset() {
	*x = StationCode{}
	mi := &file_rzd_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationCode) ProtoMessage() {}

func (x *StationCode) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationCode.ProtoReflect.Descriptor instead.
func (*StationCode) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{16}
}

func (x *StationCode) GetStation() string {
	if x != nil {
		return x.Station
	}
	return ""
}

func (x *StationCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetStationCodeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StationNamePart string                 `protobuf:"bytes,1,opt,name=stationNamePart,proto3" json:"stationNamePart,omitempty"`
	CompactMode     string                 `protobuf:"bytes,2,opt,name=compactMode,proto3" json:"compactMode,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetStationCodeRequest) Reset() {
	*x = GetStationCodeRequest{}
	mi := &file_rzd_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStationCodeRequest) ProtoMessage() {}

func (x *GetStationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStationCodeRequest.ProtoReflect.Descriptor instead.
func (*GetStationCodeRequest) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetStationCodeRequest) GetStationNamePart() string {
	if x != nil {
		return x.StationNamePart
	}
	return ""
}

func (x *GetStationCodeRequest) GetCompactMode() string {
	if x != nil {
		return x.CompactMode
	}
	return ""
}

type GetStationCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stations      []*StationCode         `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStationCodeResponse) Reset() {
	*x = GetStationCodeResponse{}
	mi := &file_rzd_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStationCodeResponse) ProtoMessage() {}

func (x *GetStationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rzd_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStationCodeResponse.ProtoReflect.Descriptor instead.
func (*GetStationCodeResponse) Descriptor() ([]byte, []int) {
	return file_rzd_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetStationCodeResponse) GetStations() []*StationCode {
	if x != nil {
		return x.Stations
	}
	return nil
}

var File_rzd_service_proto protoreflect.FileDescriptor

var file_rzd_service_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x72, 0x7a, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x7a, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x66, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x66, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x61,
	0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x74, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x74, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x6d, 0x64, 0x22, 0x73, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x53, 0x65, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x22, 0xfa, 0x02, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x30,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x30, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x65, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x57, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x57, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x43, 0x61, 0x72,
	0x52, 0x04, 0x63, 0x61, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x30, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x66, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x66, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x65, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x74, 0x30,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x74, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x74, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x74, 0x31, 0x22, 0x6e, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x04, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x96, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x30,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6e, 0x75, 0x6d, 0x30, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6e, 0x75, 0x6d, 0x30, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x74, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x74, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0x74, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x74, 0x61, 0x72, 0x69, 0x66, 0x66, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xa5, 0x01, 0x0a,
	0x08, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x4c,
	0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x6f,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x69, 0x66, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x66, 0x12, 0x1f, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05, 0x73,
	0x65, 0x61, 0x74, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x7a, 0x64, 0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x52, 0x04, 0x63, 0x61,
	0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x64, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x7a,
	0x64, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xad,
	0x03, 0x0a, 0x0a, 0x52, 0x5a, 0x44, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x7a,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x20, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x72, 0x7a, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x7a, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1f, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x7a, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x40,
	0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x68, 0x61,
	0x69, 0x6b, 0x61, 0x2d, 0x54, 0x65, 0x61, 0x6d, 0x2f, 0x72, 0x7a, 0x64, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x3b, 0x72, 0x7a, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_rzd_service_proto_rawDescOnce sync.Once
	file_rzd_service_proto_rawDescData []byte
)

func file_rzd_service_proto_rawDescGZIP() []byte {
	file_rzd_service_proto_rawDescOnce.Do(func() {
		file_rzd_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rzd_service_proto_rawDesc), len(file_rzd_service_proto_rawDesc)))
	})
	return file_rzd_service_proto_rawDescData
}

var file_rzd_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_rzd_service_proto_goTypes = []any{
	(*GetTrainRoutesRequest)(nil),        // 0: rzd.GetTrainRoutesRequest
	(*Car)(nil),                          // 1: rzd.Car
	(*TrainRoute)(nil),                   // 2: rzd.TrainRoute
	(*GetTrainRoutesResponse)(nil),       // 3: rzd.GetTrainRoutesResponse
	(*GetTrainRoutesReturnRequest)(nil),  // 4: rzd.GetTrainRoutesReturnRequest
	(*GetTrainRoutesReturnResponse)(nil), // 5: rzd.GetTrainRoutesReturnResponse
	(*GetTrainCarriagesRequest)(nil),     // 6: rzd.GetTrainCarriagesRequest
	(*Seat)(nil),                         // 7: rzd.Seat
	(*Carriage)(nil),                     // 8: rzd.Carriage
	(*TrainCarriagesResponse)(nil),       // 9: rzd.TrainCarriagesResponse
	(*GetTrainCarriagesResponse)(nil),    // 10: rzd.GetTrainCarriagesResponse
	(*GetTrainStationListRequest)(nil),   // 11: rzd.GetTrainStationListRequest
	(*TrainInfo)(nil),                    // 12: rzd.TrainInfo
	(*Route)(nil),                        // 13: rzd.Route
	(*TrainStationListResponse)(nil),     // 14: rzd.TrainStationListResponse
	(*GetTrainStationListResponse)(nil),  // 15: rzd.GetTrainStationListResponse
	(*StationCode)(nil),                  // 16: rzd.StationCode
	(*GetStationCodeRequest)(nil),        // 17: rzd.GetStationCodeRequest
	(*GetStationCodeResponse)(nil),       // 18: rzd.GetStationCodeResponse
}
var file_rzd_service_proto_depIdxs = []int32{
	1,  // 0: rzd.TrainRoute.cars:type_name -> rzd.Car
	2,  // 1: rzd.GetTrainRoutesResponse.routes:type_name -> rzd.TrainRoute
	2,  // 2: rzd.GetTrainRoutesReturnResponse.forward:type_name -> rzd.TrainRoute
	2,  // 3: rzd.GetTrainRoutesReturnResponse.back:type_name -> rzd.TrainRoute
	7,  // 4: rzd.Carriage.seats:type_name -> rzd.Seat
	8,  // 5: rzd.TrainCarriagesResponse.cars:type_name -> rzd.Carriage
	9,  // 6: rzd.GetTrainCarriagesResponse.response:type_name -> rzd.TrainCarriagesResponse
	12, // 7: rzd.TrainStationListResponse.train:type_name -> rzd.TrainInfo
	13, // 8: rzd.TrainStationListResponse.routes:type_name -> rzd.Route
	14, // 9: rzd.GetTrainStationListResponse.response:type_name -> rzd.TrainStationListResponse
	16, // 10: rzd.GetStationCodeResponse.stations:type_name -> rzd.StationCode
	0,  // 11: rzd.RZDService.GetTrainRoutes:input_type -> rzd.GetTrainRoutesRequest
	4,  // 12: rzd.RZDService.GetTrainRoutesReturn:input_type -> rzd.GetTrainRoutesReturnRequest
	6,  // 13: rzd.RZDService.GetTrainCarriages:input_type -> rzd.GetTrainCarriagesRequest
	11, // 14: rzd.RZDService.GetTrainStationList:input_type -> rzd.GetTrainStationListRequest
	17, // 15: rzd.RZDService.SearchStation:input_type -> rzd.GetStationCodeRequest
	3,  // 16: rzd.RZDService.GetTrainRoutes:output_type -> rzd.GetTrainRoutesResponse
	5,  // 17: rzd.RZDService.GetTrainRoutesReturn:output_type -> rzd.GetTrainRoutesReturnResponse
	10, // 18: rzd.RZDService.GetTrainCarriages:output_type -> rzd.GetTrainCarriagesResponse
	15, // 19: rzd.RZDService.GetTrainStationList:output_type -> rzd.GetTrainStationListResponse
	18, // 20: rzd.RZDService.SearchStation:output_type -> rzd.GetStationCodeResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_rzd_service_proto_init() }
func file_rzd_service_proto_init() {
	if File_rzd_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rzd_service_proto_rawDesc), len(file_rzd_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rzd_service_proto_goTypes,
		DependencyIndexes: file_rzd_service_proto_depIdxs,
		MessageInfos:      file_rzd_service_proto_msgTypes,
	}.Build()
	File_rzd_service_proto = out.File
	file_rzd_service_proto_goTypes = nil
	file_rzd_service_proto_depIdxs = nil
}
